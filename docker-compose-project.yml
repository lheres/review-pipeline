version: '3.7'
services:

    postgres:                                           # create postgres container
        image: postgres:9.6
        container_name: postgres_container
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        volumes:
            - 'postgresql_data:/var/lib/postgresql/data'

    postgres_dw:
        image: postgres:9.6
        container_name: postgres_dw_container
        environment:
            - POSTGRES_USER=de
            - POSTGRES_PASSWORD=takeitaway
            - POSTGRES_DB=de
        volumes:
            - 'postgresql_dw_data:/var/lib/postgresql/data'
        ports:
            - "5430:5432"

    airflow:                                            # create airflow container
        build: './airflow_docker'                       # construct the container along the Dockerfile in this folder
        container_name: airflow_container
        restart: always
        depends_on:
            - postgres
            - postgres_dw
        environment:
            - LOAD_EX=n
            - EXECUTOR=Local
            - AIRFLOW_CONN_POSTGRES_DW=postgres://de:takeitaway@postgres_dw/de  # not secure, should be specified via Airflow connection
        volumes:                                        # mount the following local folders
            - ${PWD-.}/dags:/usr/local/airflow/dags
            - ${PWD-.}/data:/usr/local/airflow/data
            - airflow_data:/usr/local/airflow
        ports:
            - "8081:8080"                               # expose port for Airflow UI
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

    dbt-rpc:
        image: dbt-rpc
        container_name: dbt-rpc-server
        restart: always
        depends_on:
            - postgres
            - postgres_dw
        build:
          context: ./dbt_reviews
          dockerfile: ./Dockerfile

        environment:
            - DBT_PROFILES_DIR=/dbt/config/
        volumes:
          - ./dbt_reviews:/dbt
        ports:
          - "8580:8580"
        command: dbt rpc
        
volumes:
  airflow_data:
    driver: local
  postgresql_data:
    driver: local
  postgresql_dw_data:
    driver: local
